name: Build and deploy Axer

on:
  release:
    types: [ created ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Get version from git tag
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Grant execute permissions to Gradle
        run: chmod +x ./gradlew

      - name: Build macOS distributable
        run: ./gradlew :axer-remote-debugger:createDistributable

      - name: Create zip archive
        run: |
          cd axer-remote-debugger/build/compose/binaries/main
          zip -r Axer-Debugger-macos-${VERSION}.zip app

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: Axer-Debugger-macos-${{ env.VERSION }}
          path: axer-remote-debugger/build/compose/binaries/main/Axer-Debugger-macos-${{ env.VERSION }}.zip

      - name: Upload macOS release asset
        uses: softprops/action-gh-release@v2
        with:
          files: axer-remote-debugger/build/compose/binaries/main/Axer-Debugger-macos-${{ env.VERSION }}.zip
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Get version from git tag
        shell: pwsh
        run: |
          $version = git describe --tags --abbrev=0
          "VERSION=$version" >> $env:GITHUB_ENV

      - name: Build Windows distributable
        run: .\gradlew.bat :axer-remote-debugger:createDistributable

      - name: Create zip archive
        shell: pwsh
        run: |
          cd axer-remote-debugger\build\compose\binaries\main
          Compress-Archive -Path app -DestinationPath "Axer-Debugger-windows-$env:VERSION.zip"

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: Axer-Debugger-windows-${{ env.VERSION }}
          path: axer-remote-debugger/build/compose/binaries/main/Axer-Debugger-windows-${{ env.VERSION }}.zip

      - name: Upload Windows release asset
        uses: softprops/action-gh-release@v2
        with:
          files: axer-remote-debugger/build/compose/binaries/main/Axer-Debugger-windows-${{ env.VERSION }}.zip
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Get version from git tag
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Grant execute permissions to Gradle
        run: chmod +x ./gradlew

      - name: Build Linux distributable
        run: ./gradlew :axer-remote-debugger:createDistributable

      - name: Create zip archive
        run: |
          cd axer-remote-debugger/build/compose/binaries/main
          zip -r Axer-Debugger-linux-${VERSION}.zip app

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: Axer-Debugger-linux-${{ env.VERSION }}
          path: axer-remote-debugger/build/compose/binaries/main/Axer-Debugger-linux-${{ env.VERSION }}.zip

      - name: Upload Linux release asset
        uses: softprops/action-gh-release@v2
        with:
          files: axer-remote-debugger/build/compose/binaries/main/Axer-Debugger-linux-${{ env.VERSION }}.zip
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Get version from git tag
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build APK
        run: ./gradlew :axer-remote-debugger:assembleRelease

      - name: Decode and Save Keystore
        run: |
          mkdir -p $RUNNER_TEMP/keystores
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > $RUNNER_TEMP/keystores/keystore.jks

      - name: Sign APK
        run: |
          BUILD_APK=./axer-remote-debugger/build/outputs/apk/release/axer-remote-debugger-release-unsigned.apk
          SIGNED_APK=./axer-remote-debugger/build/outputs/apk/release/Axer-Debugger-${VERSION}.apk

          APKSIGNER=$(find $ANDROID_HOME/build-tools -name apksigner | sort -V | tail -n 1)

          $APKSIGNER sign \
            --ks $RUNNER_TEMP/keystores/keystore.jks \
            --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
            --ks-pass pass:"${{ secrets.KEYSTORE_PASSWORD }}" \
            --key-pass pass:"${{ secrets.KEY_PASSWORD }}" \
            --out "$SIGNED_APK" \
            "$BUILD_APK"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: Axer-Debugger-apk-${{ env.VERSION }}
          path: axer-remote-debugger/build/outputs/apk/release/Axer-Debugger-${{ env.VERSION }}.apk

      - name: Upload APK to Release
        uses: softprops/action-gh-release@v2
        with:
          files: axer-remote-debugger/build/outputs/apk/release/Axer-Debugger-${{ env.VERSION }}.apk
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build-maven:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Publish to MavenCentral
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permissions to Gradle
        run: chmod +x ./gradlew

      - name: Build Dokka HTML documentation
        run: ./gradlew dokkaGeneratePublicationHtml

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/html  # Adjust if Dokka output directory differs

  deploy-docs:
    needs: build-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4